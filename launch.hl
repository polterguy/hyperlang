
/*
 * File responsible for starting module.
 */





/*
 * Checking if this is an upload request.
 */
split:x:/../*/url?value
  =:/
if:x:/@split/0/-?name
  =:upload

  /*
   * Invoking event responsible for handling uploads, and returning early.
   */
  micro.evaluate.file:@MAGIC/helpers/handle-upload-request.hl
  return





/*
 * Including Micro and its "serious" skin.
 */
p5.web.include-css-file:@MICRO/media/main.css
p5.web.include-css-file:@MICRO/media/skins/serious.css
p5.web.include-css-file:@MICRO/media/fonts.css





/*
 * Verifying user is logged in as root, and if not, 
 * forcing the user to login before we proceed.
 */
whoami
if:x:/@whoami/*/role?value
  !=:root

  /*
   * User is not logged in as root.
   */
  p5.core.login
    message:You'll need to login with a root account to access this module

  /*
   * Returning early to abort evaluating the rest of our file.
   */
  return





/*
 * Creating our main wire frame.
 */
create-widget:magic-menu-main-container
  class:container magic-menu-editor
  widgets
    div
      class:row
      widgets
        div
          class:col-40 right
          widgets
            div
              class:strip fill
              widgets
                input:magic-menu-search-textbox
                  type:text
                  onkeydown:@"if (event.keyCode == 13) {p5.$('magic-menu-search-button').raise('onclick');return false;}"
                  oninit

                    /*
                     * Figuring out how many commands we have, and setting the placeholder's value accordingly,
                     * to give user a visual clue about how much data there actually is.
                     */
                    p5.mysql.connect:[magic-menu]
                      p5.mysql.scalar:@"select count(*) from commands"
                      set-widget-property:x:/../*/_event?value
                        placeholder:Search among {0} commands ...
                          :x:/@p5.mysql.scalar?value

                button:magic-menu-search-button
                  innerValue:@"<span class=""icon-search""></span>"
                  title:Search
                  onclick

                    /*
                     * Retrieving filter, and re-databinding grid, now with the specified filter condition.
                     */
                    get-widget-property:magic-menu-search-textbox
                      value
                    eval-x:x:/+/*
                    micro.evaluate.file:@MAGIC/helpers/databind-grid.hl
                      filter:x:/@get-widget-property/*/*?value

                    /*
                     * For simplicity, we set focus to search textbox again.
                     */
                    micro.page.set-focus:magic-menu-search-textbox

                    /*
                     * Making sure we store filter.
                     */
                    p5.web.viewstate.set:magic-menu.grid-filter
                      src:x:/@get-widget-property/*/*?value

                    /*
                     * Enabling clear button, if we have a filter, otherwise disabling it.
                     */
                    if:x:/@get-widget-property/*/*?value
                      !=:
                      delete-widget-property:magic-menu-clear-search-button
                        disabled
                    else
                      set-widget-property:magic-menu-clear-search-button
                        disabled

                button:magic-menu-clear-search-button
                  innerValue:@"<span class=""icon-cross""></span>"
                  title:Clears filter
                  disabled
                  onclick

                    /*
                     * Clears filter and invokes Ajax event for search button.
                     */
                    set-widget-property:magic-menu-search-textbox
                      value:
                    p5.web.widgets.ajax-events.raise:magic-menu-search-button
                      onclick

        div
          class:col right
          widgets
            div
              class:strip toolbar fill
              widgets

                button:magic-menu-add-command
                  innerValue:@"<span class=""icon-plus""></span>"
                  title:Add new command
                  style:"padding-left:45px;padding-right:45px;"
                  onclick

                    /*
                     * Creates a new command, by invoking file responsible for doing just that..
                     */
                    magic-menu.command.create
                      global-id:your-namespace.your-concepts.some-unique-id

                container:magic-menu-select-language
                  element:select
                  oninit

                    /*
                     * Selecting all supported languages, which depends upon
                     * your browser's supported speech languages.
                     */
                    micro.speech.speak.query-voices
                      onfinish

                        /*
                         * Looping through each voice, and creating one option element for each.
                         *
                         * But first creating our "select voice" option element.
                         */
                        create-widget
                          parent:magic-menu-select-language
                          element:option
                          innerValue:Select voice ...
                          value:_default
                        for-each:x:/../*/voices/*
                          p5.globalization.get-language-name:x:/@_dp/#?value
                          _local
                          if:x:/@_dp/#/*/local?value.bool
                            not
                            set:x:/@_local?value
                              src:", External service"
                          create-widget
                            parent:magic-menu-select-language
                            element:option
                            innerValue:{1}, {0}{2}
                              :x:/@_dp/#?name
                              :x:/@p5.globalization.get-language-name?value
                              :x:/@_local?value
                            value:{0},{1}
                              :x:/@_dp/#?name
                              :x:/@_dp/#?value

                        /*
                         * Setting widget's initial value to language setting for user, if possible.
                         */
                        magic-menu.settings.get-language
                        set-widget-property:magic-menu-select-language
                          value:{0},{1}
                            :x:/@magic-menu.settings.get-language/*/voice?value
                            :x:/@magic-menu.settings.get-language/*/sublang?value

                  onchange

                    /*
                     * Updating user's settings according to voice selected.
                     */
                    get-widget-property:x:/../*/_event?value
                      value
                    magic-menu.settings.set-language:x:/@get-widget-property/*/*?value

                    /*
                     * Re-databinding grid.
                     */
                    micro.evaluate.file:@MAGIC/helpers/databind-grid.hl

                button
                  innerValue:@"<span class=""icon-download2""></span>"
                  title:Download dictionary
                  onclick

                    /*
                     * Downloads a backup of entire database as a zip file.
                     */
                    micro.evaluate.file:@MAGIC/helpers/export-dictionary.hl
                    magic-menu.backup.download

                button
                  innerValue:@"<span class=""icon-upload2""></span>"
                  title:Upload dictionary file
                  onclick:@"p5.dropzone.browse();event.stopPropagation(true);return false;"

                button:magic-menu-delete-all-commands
                  innerValue:@"<span class=""icon-bin""></span>"
                  title:Deletes all commands
                  onclick

                    /*
                     * Asking user to confirm action.
                     */
                    create-widgets
                      micro.widgets.modal:magic-menu-delete-all-commands-modal
                        widgets
                          h3
                            innerValue:Please confirm action
                          p
                            innerValue:Are you sure you want to do this? This action is permanent.
                          div
                            class:right
                            widgets
                              div
                                class:strip
                                style:"display:inline-block;"
                                widgets
                                  button
                                    innerValue:No
                                    style:"margin-bottom:0;"
                                    oninit

                                      /*
                                       * Setting focus initially to "No" button.
                                       */
                                      micro.page.set-focus:x:/../*/_event?value

                                    onclick

                                      /*
                                       * Simply closing modal widget.
                                       */
                                      delete-widget:magic-menu-delete-all-commands-modal

                                  button
                                    innerValue:Yes
                                    style:"margin-bottom:0;"
                                    onclick

                                      /*
                                       * Deleting all commands, and re-databinding grid.
                                       */
                                      p5.mysql.connect:[magic-menu]
                                        p5.mysql.delete:@"delete from commands"

                                      /*
                                       * Re-databinding datagrid, and closing modal widget.
                                       */
                                      set-widget-property:magic-menu-search-textbox
                                        value:
                                      p5.web.widgets.ajax-events.raise:magic-menu-search-button
                                        onclick
                                      delete-widget:magic-menu-delete-all-commands-modal

                                      /*
                                       * Giving user some feedback.
                                       */
                                      micro.windows.info:All your commands was successfully deleted
                                        class:micro-windows-info success

                button
                  innerValue:@"<span class=""icon-home3""></span>"
                  title:Close Magic menu
                  onclick

                    /*
                     * Redirecting user to server's root URL.
                     */
                    p5.web.get-root-location
                    p5.web.set-location:x:/-?value

    div
      class:row
      widgets
        container:magic-menu-content
          class:col-100
          widgets

            /*
             * Grid containing all words and phrasese Magic menu understands.
             */
            micro.widgets.grid:magic-menu-phrases-grid
              class:hover striped magic-menu-grid
              columns
                Command
                Parent
                Global ID
                Username
                Global
              oninit

                /*
                 * Evaluating file that databinds grid.
                 */
                micro.evaluate.file:@MAGIC/helpers/databind-grid.hl

                /*
                 * Including JavaScript to determine if user is at the bottom of page,
                 * at which point we "auto-feed" grid with more items.
                 */
                p5.web.include-javascript:@"
window.onscroll = function() {
  if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
    if (!p5.hyperlang_end_of_dataset) {
      if(p5.magic_menu_ongoing_scroll === true) {
        return;
      }
      p5.magic_menu_ongoing_scroll = true;
      var el = p5.$('magic-menu-phrases-grid');
      el.raise('.onfeed',{
        onsuccess:function() {
          p5.magic_menu_ongoing_scroll = false;
        }
      });
    }
  }
};"
              .onfeed

                /*
                 * Invoked when grid needs more items.
                 */
                p5.web.viewstate.get:magic-menu.grid-offset
                p5.web.viewstate.get:magic-menu.grid-filter
                eval-x:x:/+/*(/offset|/filter)
                micro.evaluate.file:@MAGIC/helpers/databind-grid.hl
                  keep-items:true
                  offset:x:/../*/p5.web.viewstate.get/[0,1]/*?value
                  filter:x:/../*/p5.web.viewstate.get/[1,2]/*?value


/*
 * Creating dropzone for entire page, to allow for drag and drop uploading of language files.
 */
micro.page.create-dropzone
  filter:zip|hl
  url:/magic-menu/upload
  .onfinish:@"function(uid, no_files, no_errors) {window.location.replace(window.location.href);}"
