/*
 * Edits a "phrase".
 * 
 * Expects [id] being database ID.
 */





/*
 * Verifying that mandatory arguments were supplied.
 */
micro.lambda.contract.min:x:/..
  id:long





/*
 * Checking if item is alread being edited, at which point we delete editor 
 * for item, and return early.
 *
 * This simple little "trick", makes it far easier to "sneak peek" at the content
 * of an item, as the user is browsing his items.
 */
p5.web.widgets.find:magic-menu-phrases-grid
  .edit:x:/../*/id?value
if:x:/@p5.web.widgets.find/*/*?value

  delete-widget:x:/@p5.web.widgets.find/*/*?value
  return





/*
 * Connecting to database, to select record we're editing.
 */
p5.mysql.connect:[magic-menu]
  p5.mysql.select:@"select * from phrases where id = @id"
    @id:x:/../*/id?value
  p5.mysql.select:@"select * from phrases where commandid = @commandid"
    @commandid:x:/./-/*/*/commandid?value
  p5.mysql.select:@"select hyperlambda, parent, global, username, global_id from commands where id = @commandid"
    @commandid:x:/./-2/*/*/commandid?value





/*
 * Preparing all synonyms for databind operation.
 */
magic-menu.settings.get-language
.synonyms
for-each:x:/@p5.mysql.connect/*/p5.mysql.select/[1,2]/*

  /*
   * Checking is currently iterated synonym's language declaration equals the
   * main language for user, at which point we do not prepend the language declaration
   * for it.
   */
  if:x:/@magic-menu.settings.get-language/*/lang?value
    =:x:/@_dp/#/*/lang?value

    /*
     * Language for currently iterated synonym is the same as the root language for
     * user, hence we don't explicitly prepend the phrase with its language definition.
     */
    eval-x:x:/+/*/*
    add:x:/@.synonyms
      src
        :x:/@_dp/#/*/command?value

  else

    /*
     * Language declaration for currently iterated phrase is different from user's
     * main language of choice.
     */
    eval-x:x:/+/*/*
    add:x:/@.synonyms
      src
        :"{0}:{1}"
          :x:/@_dp/#/*/lang?value
          :x:/@_dp/#/*/command?value

join:x:/@.synonyms/*?value
  sep:"\r\n"





/*
 * Checking if this is a "global" command.
 */
if:x:/@p5.mysql.connect/*/p5.mysql.select/[2,3]/*/*/global?value.int
  =:int:1
  add:x:/../*/create-widget/**/micro.widgets.wizard-form/*/checkbox/*/.data-field/=global/.
    src:checked





/*
 * Checking if this is a "private" command.
 */
if:x:/@p5.mysql.connect/*/p5.mysql.select/[2,3]/*/*/username?value
  add:x:/../*/create-widget/**/micro.widgets.wizard-form/*/checkbox/*/.data-field/=private/.
    src:checked





/*
 * Finding grid item, and appending a row beneath item, which allows for editing item.
 */
p5.web.widgets.find:magic-menu-phrases-grid
  .id:x:/../*/id?value
eval-x:x:/+/**/micro.widgets.wizard-form/*(/value|/*/micro.widgets.codemirror/*/value)
create-widget
  element:tr
  .edit:x:/../*/id?value
  after:x:/@p5.web.widgets.find/*/*?value
  class:no-hover
  widgets
    td
      colspan:100

      /*
       * Notice, the "max width" below, is a little trick, necessary to avoid having
       * CodeMirror resize itself, beyond the width of the table size.
       *
       * However, this does add vertical scrolling on CodeMirror, but rather that, than
       * having the grid "pop in and out" of "random widths" ...
       */
      widgets
        container
          class:rounded shaded bg air-inner air-top
          widgets
            micro.widgets.wizard-form
              label
                innerValue:Command(s)
              br
              textarea
                info:Phrase(s), one for each line
                rows:5
                value:x:/@join?value
                .data-field:synonyms
              br
              label
                innerValue:Hyperlambda
              div
                class:air-bottom
                widgets
                  micro.widgets.codemirror
                    .data-field:hyperlambda
                    value:x:/@p5.mysql.connect/*/p5.mysql.select/[2,3]/*/*/hyperlambda?value
              checkbox
                info:Global
                .data-field:global
                title:If checked, this phrase can be said at any time
              checkbox
                info:Private
                .data-field:private
                title:If checked, this phrase and it associated lambda is private for your user, otherwise all users can use it

            div
              class:strip fill
              widgets
                label
                  innerValue:Global ID
                input
                  type:text
                  .data-field:global_id
                  placeholder:Global ID ...
                  value:x:/@p5.mysql.connect/*/p5.mysql.select/[2,3]/*/*/global_id?value
                button
                  innerValue:@"<span class=""icon-floppy-disk""></span>"
                  title:Saves command object, and all associated synonyms
                  class:larger
                  events

                    /*
                     * Throws an exception if the specified language doesn't exist.
                     */
                    magic-menu._assume-language-exists

                      /*
                       * Checking to see if the specified [_arg] language exists.
                       */
                      p5.web.session.get:micro.speech.speak.query.voices
                      if:x:/@p5.web.session.get/*/*/*/={0}
                        :x:/../*/_arg?value
                        not
                        and:x:/@p5.web.session.get/*/*/*/=~{0}-
                          :x:/../*/_arg?value
                          not
                        throw:'{0}' is not a supported language
                          :x:/../*/_arg?value

                  onclick

                    /*
                     * Serializing form, and storing values into database.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .edit
                    get-widget-property:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                      .edit
                    micro.form.serialize:x:/@p5.web.widgets.find-first-ancestor/*/*?value

                    /*
                     * Connecting to database, and doing updates.
                     */
                    try

                      /*
                       * Sanity checking Global ID, defaulting its value to a random GUID.
                       */
                      if:x:/@micro.form.serialize/*/global_id?value
                        =:
                        set:x:/@micro.form.serialize/*/global_id?value
                          p5.types.guid.new
                      match:x:/@micro.form.serialize/*/global_id?value
                        src:/^[-a-z0-9_\.]{10,}$/i
                      if:x:/@match/*
                        not
                        throw:Not a valid global ID, use only a-z, 0-9, -, _ or ., and use at least 10 characters

                      /*
                       * Connecting to database and updating command.
                       */
                      p5.mysql.connect:[magic-menu]
                        p5.mysql.transaction.begin

                          /*
                           * Figuring out commandid.
                           */
                          p5.mysql.scalar:@"select commandid from phrases where id = @id"
                            @id:x:/@get-widget-property/*/*?value

                          /*
                           * Updating Global ID.
                           */
                          p5.mysql.update:@"update commands set global_id = @global_id where id = @id"
                            @global_id:x:/@micro.form.serialize/*/global_id?value
                            @id:x:/@p5.mysql.scalar?value

                          /*
                           * Deleting all "old" phrases.
                           */
                          p5.mysql.delete:@"delete from phrases where commandid = @commandid"
                            @commandid:x:/@p5.mysql.scalar?value

                          /*
                           * Retrieving language for current user, which is necessary to filter our results.
                           */
                          magic-menu.settings.get-language

                          /*
                           * Inserting new phrases.
                           */
                          split:x:/@micro.form.serialize/*/synonyms?value
                            =:"\r\n"
                          _new-phrase-id
                          p5.types.date.now
                          for-each:x:/@split/*?name

                            /*
                             * Checking if there's an explicit language for current entry, and if not, using default.
                             */
                            split:x:/@_dp?value
                              =:":"
                            if:x:/@split/*?count
                              =:int:2

                              /*
                               * Explicit language definition.
                               */
                              magic-menu._assume-language-exists:x:/@split/0?name
                              eval-x:x:/+/*/*
                              add:x:/..for-each/*/p5.mysql.insert
                                src
                                  @command:x:/@split/0/-?name
                                  @lang:x:/@split/0?name

                            else-if:x:/@split/*?count
                              =:int:1

                              /*
                               * No explicit language definition, relying on default.
                               */
                              eval-x:x:/+/*/*
                              add:x:/..for-each/*/p5.mysql.insert
                                src
                                  @command:x:/@_dp?value
                                  @lang:x:/@magic-menu.settings.get-language/*/lang?value

                            else

                              /*
                               * We found at least two ":" in phrase, which is not legal.
                               */
                              throw:@"You can only use ':' to separate between language and phrase"
                                :x:/@_dp?value

                            /*
                             * Inserting into phrases, making sure we store database id for the
                             * first insertion, such that we can update our row's database reference.
                             */
                            p5.mysql.insert:@"insert into phrases (command, lang, commandid, lastused) values (@command, @lang, @commandid, @lastused)"
                              @commandid:x:/@p5.mysql.scalar?value
                              @lastused:x:/@p5.types.date.now?value
                            if:x:/@_new-phrase-id?value
                              not
                              set:x:/@_new-phrase-id?value
                                src:x:/@p5.mysql.insert/*/id?value

                          /*
                           * Saving actual command.
                           */
                          _username
                          if:x:/@micro.form.serialize/*/private?value

                            /*
                             * Command is private for currently logged in user.
                             */
                            whoami
                            set:x:/@_username?value
                              src:x:/@whoami/*/username?value
                            

                          p5.mysql.update:@"update commands set hyperlambda = @hyperlambda, global = @global, username = @username where id = @id"
                            @hyperlambda:x:/@micro.form.serialize/*/hyperlambda?value
                            @global:x:/@micro.form.serialize/*/global?value
                            @username:x:/@_username?value
                            @id:x:/@p5.mysql.scalar?value

                          /*
                           * Committing transaction.
                           */
                          p5.mysql.transaction.commit

                          /*
                           * Giving user feedback.
                           */
                          micro.windows.info:Command successfully saved
                            class:micro-windows-info success

                          /*
                           * Making sure we update database id for currently updated row.
                           *
                           * Both in the grid, and our editor.
                           */
                          p5.web.widgets.find
                            .id:x:/../*/get-widget-property/*/*?value
                          set-widget-property:x:/@p5.web.widgets.find/*/*?value
                            .id:x:/@_new-phrase-id?value
                          p5.web.widgets.find
                            .edit:x:/../*/get-widget-property/*/*?value
                          set-widget-property:x:/@p5.web.widgets.find/*/*?value
                            .edit:x:/@_new-phrase-id?value

                    catch

                      /*
                       * Oops ...!!
                       */
                      micro.windows.info:x:/@message?value
                        class:micro-windows-info warning

                button
                  innerValue:@"<span class=""icon-plus""></span>"
                  title:Creates a new child command
                  onclick

                    /*
                     * Invokes event responsible for creating a new phrase to command
                     * association, passing in [pos] being currently edited command.
                     *
                     * First retrieving "phrase" id.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .edit
                    get-widget-property:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                      .edit

                    /*
                     * Then we need to retrieve "command" id.
                     */
                    p5.mysql.connect:[magic-menu]
                      p5.mysql.scalar:@"select commandid from phrases where id = @id"
                        @id:x:/@get-widget-property/*/*?value
                      p5.mysql.scalar:@"select global_id from commands where id in (select commandid from phrases where id = @id)"
                        @id:x:/@get-widget-property/*/*?value

                    /*
                     * Then we invoke event that is responsible for creating a new phrase/command association,
                     * making sure we pass in [pos] to explicitly override the default positioning logic.
                     */
                    eval-x:x:/+/*
                    magic-menu.command.create:New child command
                      pos:x:/@p5.mysql.connect/*/p5.mysql.scalar/[0,1]?value
                      global-id:{0}.child
                        :x:/@p5.mysql.connect/*/p5.mysql.scalar/[1,2]?value
                      force-parent:bool:true

                button
                  innerValue:@"<span class=""icon-files-empty""></span>"
                  title:Clones the given command
                  onclick

                    /*
                     * Invokes event responsible for creating a new phrase to command
                     * association, passing in [pos] being currently edited command.
                     *
                     * First retrieving "phrase" id.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .edit
                    get-widget-property:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                      .edit

                    /*
                     * Then we need to retrieve the command and phrase to parametrise our create new command invocation.
                     */
                    p5.mysql.connect:[magic-menu]
                      p5.mysql.select:@"select parent, hyperlambda, global, username, global_id from commands where id in (select commandid from phrases where id = @id)"
                        @id:x:/@get-widget-property/*/*?value
                      p5.mysql.select:@"select command from phrases where id = @id"
                        @id:x:/@get-widget-property/*/*?value

                    /*
                     * Then we invoke event that is responsible for creating a new phrase/command association,
                     * making sure we pass in [pos] to explicitly override the default positioning logic, but only
                     * if current command actually has a parent.
                     */
                    if:x:/@p5.mysql.connect/*/p5.mysql.select/[0,1]/*/*/parent?value
                      add:x:/../*/magic-menu.command.create
                        src
                          pos:x:/@p5.mysql.connect/*/p5.mysql.select/[0,1]/*/*/parent?value
                    if:x:/@p5.mysql.connect/*/p5.mysql.select/[0,1]/*/*/global?value.int
                      =:int:1
                      add:x:/../*/magic-menu.command.create
                        src
                          global:bool:true
                    if:x:/@p5.mysql.connect/*/p5.mysql.select/[0,1]/*/*/username?value
                      not
                      add:x:/../*/magic-menu.command.create
                        src
                          private:bool:false
                    eval-x:x:/+/*
                    magic-menu.command.create:x:/@p5.mysql.connect/*/p5.mysql.select/[1,2]/*/*/command?value
                      hyperlambda:x:/@p5.mysql.connect/*/p5.mysql.select/[0,1]/*/*/hyperlambda?value
                      force-parent:bool:true
                      global-id:{0}-clone
                        :x:/@p5.mysql.connect/*/p5.mysql.select/[0,1]/*/*/global_id?value

                button
                  innerValue:@"<span class=""icon-bin""></span>"
                  title:Deletes command object, and all associated synonyms
                  onclick

                    /*
                     * Asks user to confirm deletion using a modal widget.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .edit
                    get-widget-property:x:/-/*/*?value
                      .edit
                    eval-x:x:/+/**/.id
                    micro.windows.confirm
                      header:Please confirm
                      body:Are you sure you want to delete this command, and all its associated synonyms? This action is permanent.
                      onok

                        /*
                         * Deleting command, and deleting row from grid.
                         */
                        .id:x:/../*/get-widget-property/*/*?value
                        p5.mysql.connect:[magic-menu]
                          p5.mysql.delete:@"delete from commands where id in (select commandid from phrases where id = @id)"
                            @id:x:/@.id?value
                        p5.web.widgets.find
                          .id:x:/@.id?value
                        delete-widget:x:/-/*/*?value
                        p5.web.widgets.find
                          .edit:x:/@.id?value
                        delete-widget:x:/-/*/*?value

                button
                  innerValue:@"<span class=""icon-cross""></span>"
                  title:Close editor for command object without saving
                  onclick

                    /*
                     * Simply deleting editor widget and row entirely.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .edit
                    delete-widget:x:/@p5.web.widgets.find-first-ancestor/*/*?value
