
/*
 * Sets the sepcified [_arg] setting to the given [value].
 *
 * Notice, if you don't supply a [value], any existing settings value for the
 * [_arg] setting will simply be removed.
 */
create-event:magic-menu.settings.set

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.min:x:/..
    _arg:string
  micro.lambda.contract.optional:x:/..
    value

  /*
   * Retrieves settings for user.
   */
  p5.auth.my-settings.get

  /*
   * Making sure we pass in all old settings to our "set settings" invocation 
   * below.
   */
  add:x:/../*/p5.auth.my-settings.set
    src:x:/@p5.auth.my-settings.get/*

  /*
   * Making sure we remove the specified [_arg] setting from our set invocation below.
   *
   * And also making sure we create a [magic-menu] setting section, if it doesn't 
   * exist from before.
   */
  set:x:/../*/p5.auth.my-settings.set/*/magic-menu/*/{0}
    :x:/@_arg?value
  if:x:/../*/p5.auth.my-settings.set/*/magic-menu
    not

    /*
     * Since not Magic menu settings existed, we make sure we explicitly add the
     * section for Magic menu in the user's settings.
     */
    add:x:/../*/p5.auth.my-settings.set
      src
        magic-menu

  /*
   * Adding specified [_arg] setting, with the specified [value].
   *
   * But only if caller supplied a [value] argument, otherwise this is a remove
   * invocation.
   */
  if:x:/../*/value?value

    /*
     * Caller supplied a [value].
     */
    add:x:/../*/p5.auth.my-settings.set/*/magic-menu
      src:x:/../*/_arg?value
    set:x:/../*/p5.auth.my-settings.set/*/magic-menu/0/-?value
      src:x:/../*/value?value

  else

    /*
     * Checking if Magic menu section is empty, at which we remove it entirely.
     */
    if:x:/../*/p5.auth.my-settings.set/*/magic-menu/*?count
      =:int:0
      set:x:/../*/p5.auth.my-settings.set/*/magic-menu

  p5.auth.my-settings.set
