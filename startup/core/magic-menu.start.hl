
/*
 * Creates the event that actually starts Magic menu.
 *
 * You can override the default greeting with [greeting].
 */
create-event:magic-menu.start

  /*
   * Defaults.
   */
  .defaults
    greeting:[Hello]

  /*
   * Checking if Magic menu is already initiated from before, and if so, making
   * sure we close any previous instances first.
   */
  if
    fetch:x:/0/0?value
      widget-exists:magic-menu-listener
    delete-widget:magic-menu-listener

  /*
   * Making sure we reset grammar position.
   */
  magic-menu.grammar-position.clear

  /*
   * Unwrapping greeting.
   *
   * This is necessary to make sure we display the specified greeting as the
   * text of our "info" widget.
   */
  magic-menu.unwrap-phrase:x:(/../*/greeting|/@.defaults/*/greeting)/$?value

  /*
   * Creating main Magic menu widget.
   */
  create-widget:magic-menu-listener
    class:magic-menu-listener shaded rounded
    widgets
      container:magic-menu-help-wrapper
      div
        class:strip fill
        widgets
          button
            style:"margin-bottom:0;"
            title:Turns off speech
            events

              /*
               * Returns true if speech is enabled, otherwise false.
               */
              magic-menu.speech-is-enabled

                /*
                 * Checking if speech is enabled.
                 */
                p5.web.widgets.get-children:x:/../*/_event?value
                get-widget-property:x:/-/*/*?value
                  class
                if:x:/@get-widget-property/*/*?value
                  =:icon-pause2

                  /*
                   * Speech is enabled.
                   */
                  return:bool:true

                else

                  /*
                   * Speech is disabled.
                   */
                  return:bool:false

              /*
               * Turns off speech, both input and output
               */
              magic-menu.turn-off-speech

                /*
                 * Retrieving child, which contains either a microphone icon, or
                 * a play icon, and determines if we should turn off speech according
                 * to what icon is being displayed.
                 */
                p5.web.widgets.get-children:x:/../*/_event?value
                get-widget-property:x:/-/*/*?value
                  class
                if:x:/@get-widget-property/*/*?value
                  =:icon-pause2

                  /*
                   * Speech input/output needs to be disabled.
                   *
                   * Disabling "listening" class from main widget, changing icon
                   * of our "pause button", and stops speech input/output.
                   */
                  micro.css.delete:magic-menu-listener
                    class:magic-menu-listening
                  set-widget-property:x:/@p5.web.widgets.get-children/*/*?value
                    class:icon-mic
                  micro.listen.stop
                  micro.speak.stop

                  /*
                   * Notice, we also store in our p5.data database if speech is 
                   * disabled for user, such that we remember the setting for
                   * the next time Magic menu is launched.
                   */
                  whoami
                  delete-data:x:/*/*/magic-menu.speech-is-disabled-{0}
                    :x:/@whoami/*/username?value
                  set:x:/+/*?name
                    src:magic-menu.speech-is-disabled-{0}
                      :x:/@whoami/*/username?value
                  insert-data
                    foo:bool:true

                  /*
                   * Notice, when speech is disabled, we make sure we show options
                   * by default.
                   */
                  magic-menu.options.show

              /*
               * Turns on speech, both input and output
               */
              magic-menu.turn-on-speech

                /*
                 * Retrieving child, which contains either a microphone icon, or
                 * a play icon, and determines if we should turn off speech according
                 * to what icon is being displayed.
                 */
                p5.web.widgets.get-children:x:/../*/_event?value
                get-widget-property:x:/-/*/*?value
                  class
                if:x:/@get-widget-property/*/*?value
                  =:icon-mic

                  /*
                   * We should restart input loop.
                   */
                  set-widget-property:x:/@p5.web.widgets.get-children/*/*?value
                    class:icon-pause2
                  magic-menu.listen:[Talk to me]

                  /*
                   * Notice, we also store in our p5.data database if speech is 
                   * disabled for user, hence we need to delete this setting, to
                   * remember if speech is enabled if Magic menu is later launcehd.
                   */
                  whoami
                  delete-data:x:/*/*/magic-menu.speech-is-disabled-{0}
                    :x:/@whoami/*/username?value

            onclick

              /*
               * Figuring out if we should pause or restart.
               */
              if
                magic-menu.speech-is-enabled

                /*
                 * Disabling speech input.
                 */
                magic-menu.turn-off-speech

              else

                /*
                 * Enabling speech input.
                 */
                magic-menu.turn-on-speech

            oninit

              /*
               * Figuring out if speech is enabled or disabled in database for
               * current user.
               */
              whoami
              select-data:x:/*/*/magic-menu.speech-is-disabled-{0}
                :x:/@whoami/*/username?value
              if:x:/@select-data/*?value

                /*
                 * Speech is by default disabled for current session.
                 */
                micro.css.delete:magic-menu-listener
                  class:magic-menu-listening
                p5.web.widgets.get-children:x:/../*/_event?value
                set-widget-property:x:/@p5.web.widgets.get-children/*/*?value
                  class:icon-mic

                /*
                 * When speech is by default disabled for user, we automatically
                 * show our options, since no other input elements exists.
                 */
                magic-menu.options.show
                micro.css.add:magic-menu-show-options-button
                  class:toggled

            widgets
              literal
                element:span
                class:icon-pause2

          literal:magic-menu-current-text
            element:label
            class:magic-menu-tip
            innerValue:x:/@magic-menu.unwrap-phrase?value

          button:magic-menu-show-options-button
            style:"margin-bottom:0;"
            innerValue:@"<span class=""icon-question""></span>"
            title:Show options
            events

              /*
               * Trapping when options are displayed, to make sure we toggle
               * our button accordingly.
               */
              magic-menu.options.show

                /*
                 * Making sure button becomes "toggled".
                 */
                micro.css.add:x:/../*/_event?value
                  class:toggled
                return:x:/../*/_arg?value

              /*
               * Trapping when options are hidden, to make sure we toggle
               * our button accordingly.
               */
              magic-menu.options.close

                /*
                 * Making sure button becomes "untoggled".
                 */
                micro.css.delete:x:/../*/_event?value
                  class:toggled

            onclick

              /*
               * Checking if widget exists already, and if so, we hide it.
               */
              if
                fetch:x:/0/0?value
                  widget-exists:magic-menu-help

                /*
                 * Hides options for Magic menu, and deletes CSS "toggled" class
                 * for button.
                 */
                magic-menu.options.close

              else

                /*
                 * Showing options for Magic menu, and adds CSS "toggled" class
                 * for button.
                 */
                magic-menu.options.show

          button
            style:"margin-bottom:0;"
            innerValue:@"<span class=""icon-plus""></span>"
            title:Teach computer phrase
            visible:false
            events

              /*
               * Event that displays our "create-command" button.
               */
              magic-menu.display-create-command-button

                /*
                 * Simply making widget visible.
                 */
                set-widget-property:x:/../*/_event?value
                  visible:true
                  .spoken:x:/../*/_arg?value

              /*
               * Event that hides our "create-command" button.
               */
              magic-menu.hide-create-command-button

                /*
                 * Simply making widget visible.
                 */
                set-widget-property:x:/../*/_event?value
                  visible:false

            onclick

              /*
               * Invokes event responsible for creating a new association, making
               * sure we pass in proper arguments.
               */
              get-widget-property:x:/../*/_event?value
                .spoken
              magic-menu.grammar-position.get
              if:x:/@magic-menu.grammar-position.get?value
                eval-x:x:/+/*/*
                add:x:/../*/magic-menu.command.create
                  src
                    pos:x:/@magic-menu.grammar-position.get?value
              magic-menu.command.create:x:/@get-widget-property/*/*?value

              /*
               * Deletes the visual clue, indicating we're listening for input,
               * and makes sure we stop listening and speaking.
               */
              micro.css.delete:magic-menu-listener
                class:magic-menu-listening
              micro.listen.stop
              micro.speak.stop

          button
            style:"margin-bottom:0;"
            innerValue:@"<span class=""icon-cross""></span>"
            title:Close Magic menu
            accesskey:Q
            onclick

              /*
               * Closing Magic menu.
               */
              magic-menu.stop

  /*
   * Greets user, and asks for input.
   */
  magic-menu.listen:x:(/../*/greeting|/@.defaults/*/greeting)/$?value
