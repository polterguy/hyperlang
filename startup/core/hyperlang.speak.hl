
/*
 * Invoked when Hyperlang should speak something.
 *
 * Expects [_arg] to be whatever should be spoken.
 * Optionally, pass in [voice] to override the default voice to use, which is 
 * fetched from the user's settings.
 */
create-event:hyperlang.speak

  /*
   * Signal node.
   */
  .signal

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.min:x:/..
    _arg:string

  /*
   * If widget was closed, we simply abort.
   */
  if
    fetch:x:/0/0?value
      widget-exists:hyperlang-listener
    not
    return

  /*
   * Unwrapping any references in [_arg] given.
   */
  hyperlang.unwrap-phrase:x:/../*/_arg?value

  /*
   * Applies arguments, and adds [voice] unless an explicit voice was given as an argument.
   */
  if:x:/../*/voice?value
    not

    /*
     * No voice was given as an argument, making sure we apply the default voice from
     * user's settings.
     */
    hyperlang.settings.get-language
    eval-x:x:/+/*/*
    add:x:/../*/micro.speak
      src
        voice:{0},{1}-{2}
          :x:/@hyperlang.settings.get-language/*/voice?value
          :x:/@hyperlang.settings.get-language/*/lang?value
          :x:/@hyperlang.settings.get-language/*/sublang?value
  add:x:/../*/micro.speak
    src:x:/@.signal/--(!/_arg)

  /*
   * Speaks given [_arg], now "unwrapped" with any references, with our configured voice.
   */
  micro.speak:x:/@hyperlang.unwrap-phrase?value
