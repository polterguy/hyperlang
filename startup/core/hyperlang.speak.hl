
/*
 * Invoked when Hyperlang should speak something.
 *
 * Expects [_arg] to be whatever should be spoken.
 * Optionally, pass in [voice] to override the default voice to use, which is 
 * fetched from the user's settings.
 */
create-event:hyperlang.speak

  /*
   * Signal node, to separate arguments from the rest of our lambda.
   */
  .signal

  /*
   * Checking if there are referenced word(s) inside specified word or phrase.
   */
  match:x:/../*/_arg?value
    src:regex:/\[[^\]]*\]/i

  /*
   * Making sure we do any substitutions found inside of [_arg].
   */
  for-each:x:/@match/*/$?name

    /*
     * Checking if this is an event invocation, or a localized phrase.
     */
    split:x:/@_dp?value
      =:"."
    if:x:/@split/*?count
      >:int:1

      /*
       * Active event invocation to retrieve value.
       */
      trim:x:/@_dp?value
        chars:[]
      split:x:/@trim?value
        =:":"
      set:x:/+2?name
        src:x:/@split/0?name
      set:x:/+?value
        src:x:/@split/1?name
      foo

      /*
       * Replacing all occurrencies of currently iterated [match] inside of
       * [_arg] to result of event invocation.
       */
      set:x:/../*/_arg?value
        replace:x:/../*/_arg?value
          src:x:/@_dp?value
          dest:x:/..set/-?value

    else

      /*
       * Localized phrase, doing lookup into language file(s).
       */
      hyperlang.language.get-localized-phrase:x:/@_dp?value
      set:x:/../*/_arg?value
        replace:x:/../*/_arg?value
          src:x:/@_dp?value
          dest:x:/@hyperlang.language.get-localized-phrase?value

  /*
   * Applies arguments, and adds [voice] unless an explicit voice was given as an argument.
   */
  if:x:/../*/voice?value
    not

    /*
     * No voice was given as an argument, making sure we apply the default voice from
     * user's settings.
     */
    hyperlang.settings.get-language
    eval-x:x:/+/*/*
    add:x:/../*/micro.speak
      src
        voice:{0},{1}-{2}
          :x:/@hyperlang.settings.get-language/*/voice?value
          :x:/@hyperlang.settings.get-language/*/lang?value
          :x:/@hyperlang.settings.get-language/*/sublang?value
  add:x:/../*/micro.speak
    src:x:/@.signal/--(!/_arg)

  /*
   * Speaks given [_arg] with our configured voice.
   */
  micro.speak:x:/../*/_arg?value
