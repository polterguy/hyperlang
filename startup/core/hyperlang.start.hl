
/*
 * Creates the event that actually starts Hyperlang.
 *
 * You can override the default greeting with [greeting]
 */
create-event:hyperlang.start

  /*
   * Defaults.
   */
  .defaults
    greeting:[Hello]

  /*
   * Checking if Hyperlang is already initiated from before, and if so, making
   * sure we close any previous instances first.
   */
  if
    fetch:x:/0/0?value
      widget-exists:hyperlang-listener
    delete-widget:hyperlang-listener

  /*
   * Making sure we reset grammar position.
   */
  hyperlang.grammar-position.clear

  /*
   * Creating main Hyperlang widget.
   */
  create-widget:hyperlang-listener
    class:hyperlang-listener shaded rounded air-inner
    widgets
      div
        class:strip
        widgets
          button
            style:"margin-bottom:0;"
            innerValue:@"<span class=""icon-close""></span>"
            title:Close Hyperlang
            accesskey:Q
            oninit

              /*
               * Setting initial focus to "Close" button, to make it easy to close module.
               */
              micro.page.set-focus:x:/../*/_event?value

            onclick

              /*
               * Closing Hyperlang.
               */
              hyperlang.stop

          literal:hyperlang-current-text
            element:label
            class:hyperlang-tip
            visible:false

          button
            style:"margin-bottom:0;"
            innerValue:@"<span class=""icon-plus""></span>"
            title:Teach computer phrase
            visible:false
            events

              /*
               * Event that displays our "create-command" button.
               */
              hyperlang.display-create-command-button

                /*
                 * Simply making widget visible.
                 */
                set-widget-property:x:/../*/_event?value
                  visible:true
                  .spoken:x:/../*/_arg?value

              /*
               * Event that hides our "create-command" button.
               */
              hyperlang.hide-create-command-button

                /*
                 * Simply making widget visible.
                 */
                set-widget-property:x:/../*/_event?value
                  visible:false

            onclick

              /*
               * Invokes event responsible for creating a new association, making
               * sure we pass in proper arguments.
               */
              get-widget-property:x:/../*/_event?value
                .spoken
              hyperlang.grammar-position.get
              if:x:/@hyperlang.grammar-position.get?value
                eval-x:x:/+/*/*
                add:x:/../*/hyperlang.command.create
                  src
                    pos:x:/@hyperlang.grammar-position.get?value
              hyperlang.command.create:x:/@get-widget-property/*/*?value

              /*
               * Deletes the visual clue, indicating we're listening for input,
               * and makes sure we stop listening and speaking.
               */
              micro.css.delete:hyperlang-listener
                class:hyperlang-listening
              micro.listen.stop
              micro.speak.stop

          button
            style:"margin-bottom:0;"
            innerValue:@"<span class=""icon-question-circle""></span>"
            title:Show options
            onclick

              /*
               * Showing options for Hyperlang.
               */
              hyperlang.options.show

  /*
   * Greets user, and asks for input.
   */
  hyperlang.listen:x:(/../*/greeting|/@.defaults/*/greeting)/$?value
