
/*
 * Invoked when Hyperlang should speak something.
 *
 * Expects [_arg] to be whatever should be spoken.
 */
create-event:hyperlang.speak

  /*
   * Signal node, to separate arguments from the rest of our lambda.
   */
  .signal

  /*
   * Defaults, in case no settings exists.
   */
  .defaults
    voice:Karen,en

  /*
   * Retrieving settings for user, to figure out voice to use, etc.
   */
  p5.auth.my-settings.get

  /*
   * Checking if this is a referenced word, implying a word that should be translated.
   */
  if
    starts-with:x:/../*/_arg?value
      src:[
    and
      ends-with:x:/../*/_arg?value
        src:]

    /*
     * Referenced word, doing a lookup into language file, and changing spoken
     * phrase accordingly.
     */
    hyperlang.get-localized-phrase:x:/../*/_arg?value
    set:x:/../*/_arg?value
      src:x:/@hyperlang.get-localized-phrase?value
        :x:/../*/_arg?value

  else

    /*
     * Checking if there are referenced word(s) inside specified word or phrase.
     */
    split:x:/../*/_arg?value
      =:[
      =:]
    if:x:/@split/*?count
      >:int:1

      /*
       * There is at least one referenced word or phrase inside specified phrase.
       *
       * Making sure we do our substitution.
       */
      for-each:x:/@split/*/%2
        hyperlang.get-localized-phrase:[{0}]
          :x:/@_dp/#?name
        set:x:/@_dp/#?name
          src:x:/@hyperlang.get-localized-phrase?value
      join:x:/@split/*?name
      set:x:/../*/_arg?value
        src:x:/@join?value

  /*
   * Applies arguments.
   */
  add:x:/../*/micro.speak
    src:x:/@.signal/--(!/_arg)

  /*
   * Making sure we remove "active" CSS class when speech recognition is done.
   */
  if
    fetch:x:/0/0?value
      widget-exists:hyperlang-listener
    micro.css.delete:hyperlang-listener
      class:hyperlang-listening

  /*
   * Speaks given [_arg] with our configured voice.
   */
  eval-x:x:/+/*
  micro.speak:x:/../*/_arg?value
    voice:x:(/@p5.auth.my-settings.get/*/hyperlang/*/voice|/@.defaults/*/voice)/$?value
