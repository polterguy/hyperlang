
/*
 * Returns the localized specified phrase.
 *
 * Notice, this implies traversing our "language files", which can be found in
 * the folder "/configuration/" for the specified [xxx] string, and returning
 * the value of the referenced node back to caller.
 *
 * The language files are traversed as a tree structure, implying first looking
 * for an exact match according to "sublang" settings for user, (e.g. "en-AU"), 
 * for then to look for the major language (e.g. "en"), if the "en-AU" didn't 
 * exist, and defaulting to "en" (English) if nothing was found for that neither
 * "sublang" nor (major) "lang" settings for user.
 */
create-event:magic-menu.language.get-localized-phrase

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.min:x:/..
    _arg:string

  /*
   * Retrieving language settings for user.
   */
  magic-menu.settings.get-language

  /*
   * First checking [sublang] setting for user.
   */
  eval-x:x:/+/*
  magic-menu.language._get-localized-phrase:x:/../*/_arg?value
    lang:x:/@magic-menu.settings.get-language/*/sublang?value
  if:x:/@magic-menu.language._get-localized-phrase?value

    /*
     * [sublang] localised phrase found, returning it to caller.
     */
    return:x:/@magic-menu.language._get-localized-phrase?value

  else

    /*
     * Checking (major) [lang].
     */
    eval-x:x:/+/*
    magic-menu.language._get-localized-phrase:x:/../*/_arg?value
      lang:x:/@magic-menu.settings.get-language/*/lang?value
    if:x:/@magic-menu.language._get-localized-phrase?value

      /*
       * [lang] localised phrase found, returning it to caller.
       */
      return:x:/@magic-menu.language._get-localized-phrase?value

    else

      /*
       * Defaulting to English.
       */
      magic-menu.language._get-localized-phrase:x:/../*/_arg?value
        lang:en
      return:x:/@magic-menu.language._get-localized-phrase?value
