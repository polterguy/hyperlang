
/*
 * Creates the event that will return the possible options that user has from his
 * current position.
 *
 * Optionally pass in [limit], [offset] and [filter] to further filter your results.
 */
create-event:hyperlang.position.list-options

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.optional:x:/..
    limit:int
    offset:long
    filter:string
  if:x:/../*/offset?value
    and:x:/../*/limit?value
      not
    throw:If you supply an [offset], you'll also have to supply a [limit]

  /*
   * Creating additional "where" clause.
   */
  _where
  if:x:/../*/filter?value
    and:x:/../*/filter?value
      !=:
    set:x:/@_where?value
      src:@"and p.command like @filter"
    add:x:/../*/p5.mysql.connect/*/p5.mysql.select
      src
        @filter:%{0}%
          :x:/../*/filter?value

  /*
   * Creating additional "tail" clause.
   */
  _tail
  if:x:/../*/limit?value
    set:x:/@_tail?value
      src:@"limit @limit"
    add:x:/../*/p5.mysql.connect/*/p5.mysql.select
      src
        @limit:x:/../*/limit?value.int
    if:x:/../*/offset?value
      set:x:/@_tail?value
        src:{0} offset @offset
          :x:/@_tail?value
      add:x:/../*/p5.mysql.connect/*/p5.mysql.select
        src
          @offset:x:/../*/offset?value.int

  /*
   * Retrieves the current position, username, and current language to parametrise SQL.
   */
  whoami
  hyperlang.position.get
  hyperlang.language.get

  /*
   * Checking parent, and parametrizing SQL accordingly.
   */
  _parent
  if:x:/@hyperlang.position.get?value
    set:x:/@_parent?value
      src:"c.parent = @parent"
    add:x:/../*/p5.mysql.connect/*/p5.mysql.select
      src
        @parent:x:/@hyperlang.position.get?value
  else
    set:x:/@_parent?value
      src:"c.parent is null"

  /*
   * Connecting to database, and retrieving all possible options from current 
   * position in tree.
   */
  p5.mysql.connect:[hyperlang]
    p5.mysql.select:@"select c.id, min(p.command) as command from commands c inner join phrases p on p.commandid = c.id 
where ({2} or c.global = 1) and (c.username is null or c.username = @username) and (lang = @lang or lang = @mainlang)
{0}
group by c.id order by `global`, c.id {1}"
      :x:/@_where?value
      :x:/@_tail?value
      :x:/@_parent?value
      @username:x:/@whoami/*/username?value
      @lang:x:/@hyperlang.language.get/*/lang?value
      @mainlang:x:/@hyperlang.language.get/*/mainlang?value

    /*
     * Parametrizing return invocation below.
     */
    for-each:x:/@p5.mysql.select/*
      add:x:/../*/return
        src:@"{0}:{1}"
          :x:/@_dp/#/*/id?value
          :x:/@_dp/#/*/command?value

  /*
   * Returning results to caller.
   */
  return
