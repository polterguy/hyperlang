
/*
 * Creates the event that creates a backup and downloads it to client.
 */
create-event:hyperlang.backup.download

  /*
   * Connects to database, creates one Hyperlambda file for each command,
   * zips all resulting files, and download the zip file to the client.
   *
   * Notice, we order ascendingly by the id of the command, since that way we're
   * certain of that we'll get no parent relationships in the wrong order.
   * 
   * We also empty temporary folder first, and make sure it exists.
   */
  if
    fetch:x:/0/0?value
      folder-exists:~/temp/hyperlang/
    not
    create-folder:~/temp/hyperlang/

  /*
   * Making sure temp folder is empty.
   */
  list-files:~/temp/hyperlang/
  delete-file:x:/-/*?name

  /*
   * Connecting to database and selects all commands.
   */
  p5.mysql.connect:[hyperlang]
    p5.mysql.select:@"select * from commands order by id"

    /*
     * Loops through each command.
     */
    for-each:x:/@p5.mysql.select/*

      /*
       * Temporary lambda for command object.
       */
      eval-x:x:/+/*/*
      .command
        command
          hyperlambda:x:/@_dp/#/*/hyperlambda?value
          username:x:/@_dp/#/*/username?value
          global:x:/@_dp/#/*/global?value
          global-id:x:/@_dp/#/*/global_id?value

      /*
       * Selecting all phrases for currently iterated command, and adding each
       * phrases to above buffer.
       */
      p5.mysql.select:@"select * from phrases where commandid = @id"
        @id:x:/@_dp/#/*/id?value
      for-each:x:/@p5.mysql.select/*
        eval-x:x:/+/*/*
        .phrase
          phrase
            command:x:/@_dp/#/*/command?value
            lang:x:/@_dp/#/*/lang?value
        add:x:/@.command/*
          src:x:/@.phrase/*

      /*
       * Transforming lambda to Hyperlambda, and saving to temporary file.
       */
      lambda2hyper:x:/@.command/*
      save-file:~/temp/hyperlang/{0}.hl
        :x:/@_dp/#/*/global_id?value
        src:x:/@lambda2hyper?value

  /*
   * Zipping entire folder, and downloading to client.
   */
  if
    fetch:x:/0/0?value
      file-exists:~/temp/hyperlang-backup.zip
    delete-file:~/temp/hyperlang-backup.zip
  zip:~/temp/hyperlang-backup.zip
    src:~/temp/hyperlang/
  micro.download.file:~/temp/hyperlang-backup.zip
    Content-Type:application/zip
    Content-Disposition:@"attachment; filename=""hyperlang-backup.zip"""
