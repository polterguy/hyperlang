
/*
 * Creates the event that will return the possible options that user has from his
 * current position.
 *
 * Optionally pass in [limit], [offset] and [filter] to further filter your results.
 *
 * Will return phrase database ID, and phrase's command, in addition to a [type] child,
 * being the type of command this is, which might be global, root or local.
 */
create-event:magic-menu.grammar-position.list-options

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.optional:x:/..
    limit:long
    offset:long
    filter:string

  /*
   * Defaults, in case no parameters are passed in.
   */
  .defaults
    limit:long:10
    offset:long:0

  /*
   * Retrieves the current position, username, and current language to parametrise SQL.
   */
  whoami
  magic-menu.grammar-position.get
  magic-menu.settings.get-language

  /*
   * Dynamically building our SQL, according to filter conditions.
   *
   * Notice, we first find our commandid.
   * Then afterwards, we loop through all commandids to find the most recently used phrase,
   * which is the one we'll end up displaying to our user.
   */
  _sql:@"select commandid, parent, global from phrases p join commands c on c.id = p.commandid
    where p.id in
    (
      select min(id) from phrases where (lang = @lang or lang = @sublang) {{filter}} group by commandid
    )"

  /*
   * Checking if a filter condition was supplied.
   */
  if:x:/../*/filter?value

    /*
     * Caller supplied a [filter].
     *
     * Checking that filter doesn't try to do an SQL injection.
     */
    if
      fetch:x:/0/0?name
        match:x:/../*/filter?value
          src:regex:/\{\{filter/
      throw:Illegal filter condition

    /*
     * Filtering.
     */
    set:x:/@_sql?value
      replace:x:/@_sql?value
        src:{{filter}}
        dest:@"and command like @filter"
    add:x:/../*/p5.mysql.connect/*/p5.mysql.select
      src
        @filter:%{0}%
          :x:/../*/filter?value

  else

    /*
     * No filter.
     */
    set:x:/@_sql?value
      replace:x:/@_sql?value
        src:{{filter}}

  /*
   * Checking parent, and parametrizing SQL accordingly.
   */
  _scope
  if:x:/@magic-menu.grammar-position.get?value

    /*
     * We have an existing parent.
     */
    set:x:/@_scope?value
      src:@"and (parent = @parent or global = 1) and (username is null or username = @username)"
    add:x:/../*/p5.mysql.connect/*/p5.mysql.select
      src
        @parent:x:/@magic-menu.grammar-position.get?value

  else

    /*
     * No current parent.
     */
    set:x:/@_scope?value
      src:@"and (parent is null or global = 1) and (username is null or username = @username)"

  /*
   * Adding "tail" to SQL.
   *
   * Notice, we show "last used" commands first, then the commands that 
   * were created last.
   */
  set:x:/@_sql?value
    src:"{0} {1} order by parent desc, global, lastused desc, p.id limit @limit offset @offset"
      :x:/@_sql?value
      :x:/@_scope?value

  /*
   * Connecting to database, and retrieving all possible options from current 
   * position in tree.
   */
  p5.mysql.connect:[magic-menu]
    p5.mysql.select:x:/@_sql?value
      @username:x:/@whoami/*/username?value
      @lang:x:/@magic-menu.settings.get-language/*/lang?value
      @sublang:x:/@magic-menu.settings.get-language/*/sublang?value
      @limit:x:(/../*/limit|/@.defaults/*/limit)/$?value.long
      @offset:x:(/../*/offset|/@.defaults/*/offset)/$?value.long

    /*
     * Parametrizing return invocation below.
     */
    for-each:x:/@p5.mysql.select/*

      /*
       * Notice, we'll need an additional SQL select, to find the most recently
       * used phrase for the specified command.
       */
      p5.mysql.select:@"select id, command from phrases where (lang = @lang or lang = @sublang) and commandid = @commandid order by lastused desc limit 1"
        @lang:x:/@magic-menu.settings.get-language/*/lang?value
        @sublang:x:/@magic-menu.settings.get-language/*/sublang?value
        @commandid:x:/@_dp/#/*/commandid?value
      add:x:/../*/return
        src:@"{0}:{1}"
          :x:/@p5.mysql.select/*/*/id?value
          :x:/@p5.mysql.select/*/*/command?value

      /*
       * Checking type of currently iterated result.
       * This can be "global", "local" or "root".
       */
      if:x:/@_dp/#/*/global?value.int
        =:int:1
        add:x:/../*/return/0/-
          src
            type:magic-menu-options-global
      else-if:x:/@_dp/#/*/parent?value
        add:x:/../*/return/0/-
          src
            type:magic-menu-options-local
      else
        add:x:/../*/return/0/-
          src
            type:magic-menu-options-root

  /*
   * Returning results to caller.
   */
  return
