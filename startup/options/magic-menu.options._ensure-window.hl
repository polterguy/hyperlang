
/*
 * Private event that ensures that our common "options" window is created.
 */
create-event:magic-menu.options._ensure-window

  /*
   * Checking if widget exists already, and if so, returning early.
   */
  if
    magic-menu.options.exists

    /*
     * Widget already exists, hence returning early.
     */
    return

  /*
   * Creates widget that displays options.
   */
  create-widget:magic-menu-help
    parent:magic-menu-help-wrapper
    class:magic-menu-help
    events


      /*
       * Invoked when current options have changed.
       */
      magic-menu.position.changed

        /*
         * Simply re-displaying options will do the trick for us here.
         *
         * Making sure we forward [is-push] signal from caller.
         */
        add:x:/../*/magic-menu.options.show
          src:x:/../*(/is-push|/is-pop|/is-clear)
        magic-menu.options.show


      /*
       * Invoked when options should be refreshed for some reasons.
       */
      magic-menu.options.changed

        /*
         * Simply re-displaying options will do the trick for us here.
         */
        magic-menu.options.show


      /*
       * Returns true if options are being displayed.
       */
      magic-menu.options.exists

        /*
         * Simply returning true, because event is a lambda event, and only 
         * existing if widget exists.
         */
        return:bool:true


      /*
       * Close options widget.
       */
      magic-menu.options.close

        /*
         * Simply deleting widget, will clean up everything for us automatically.
         */
        delete-widget:x:/../*/_event?value


      /*
       * Pages to previous page of options, if possible.
       */
      magic-menu.options.show-previous

        /*
         * Retrieves current "page" for options.
         */
        magic-menu.options.get-offset

        /*
         * Checking if we have no more previous options.
         */
        if:x:/@magic-menu.options.get-offset?value.int
          =:int:0

          /*
           * We're at the beginning of our options dataset, returning false to caller,
           * to signal "failure".
           */
          return:bool:false

        /*
         * Checking if we have a filter condition.
         */
        magic-menu.options.get-filter
        if:x:/@magic-menu.options.get-filter?value
          add:x:/../*/magic-menu.grammar-position.list-options
            src
              filter:x:/@magic-menu.options.get-filter?value

        /*
         * Decrements current page.
         */
        magic-menu.settings.get:no-options
          default:5
        -:x:/@magic-menu.options.get-offset?value.long
          _:x:/@magic-menu.settings.get?value

        /*
         * Retrieving options with offset incremented now.
         */
        eval-x:x:/+/*
        magic-menu.grammar-position.list-options
          limit:x:/@magic-menu.settings.get?value
          offset:x:/@-?value.long

        /*
         * Updating "current page" value.
         */
        magic-menu.options.set-offset:x:/@-?value.int

        /*
         * Finding our last "ul" widget, with correct class, to know which widget
         * we should add our items into.
         */
        p5.web.widgets.find
          element:ul
          class:magic-menu-options

        /*
         * Parametrising and invoking event responsible for "data binding" options window.
         */
        add:x:/../*/magic-menu.options._create-options/*/options
          src:x:/@magic-menu.grammar-position.list-options/*
        eval-x:x:/+/*/parent
        magic-menu.options._create-options
          parent:x:/@p5.web.widgets.find/*/*?value
          options

        /*
         * Making sure we enable/disable next/previous buttons.
         */
        if:x:/@-?value.int
          =:int:0
          set-widget-property:magic-menu-options-page-previous
            disabled
        delete-widget-property:magic-menu-options-page-next
          disabled

        /*
         * Returning success to caller.
         */
        return:bool:true


      /*
       * Pages to next page of options, if possible.
       */
      magic-menu.options.show-next

        /*
         * Defaults.
         */
        .defaults
          magic-menu.options.offset:long:0

        /*
         * Checking if we have a filter condition, and if we do, we parametrise our
         * "list options" invocation with it.
         */
        magic-menu.options.get-filter
        if:x:/@magic-menu.options.get-filter?value
          add:x:/../*/magic-menu.grammar-position.list-options
            src
              filter:x:/@magic-menu.options.get-filter?value

        /*
         * Increments current "page" for options.
         */
        magic-menu.settings.get:no-options
          default:5
        magic-menu.options.get-offset
        +:x:/@magic-menu.options.get-offset?value.int
          _:x:/@magic-menu.settings.get?value

        /*
         * Retrieving options with offset incremented now.
         */
        eval-x:x:/+/*
        magic-menu.grammar-position.list-options
          limit:x:/@magic-menu.settings.get?value
          offset:x:/@+?value.long

        /*
         * Checking if we have anymore options, and if not, simply returning early.
         */
        if:x:/@magic-menu.grammar-position.list-options/*?count
          =:int:0

          /*
           * No more options.
           */
          set-widget-property:magic-menu-options-page-next
            disabled
          return:bool:false

        /*
         * Making sure we enable/disable next/previous buttons.
         */
        if:x:/@magic-menu.grammar-position.list-options/*?count
          <:x:/@magic-menu.settings.get?value.int
          set-widget-property:magic-menu-options-page-next
            disabled
        delete-widget-property:magic-menu-options-page-previous
          disabled

        /*
         * We have more options, first updating "current page" value.
         */
        magic-menu.options.set-offset:x:/@+?value

        /*
         * Finding our last "ul" widget, with correct class, to know which widget
         * we should add our items into.
         */
        p5.web.widgets.find
          element:ul
          class:magic-menu-options

        /*
         * Parametrising and invoking event responsible for "data binding" options window.
         */
        add:x:/../*/magic-menu.options._create-options/*/options
          src:x:/@magic-menu.grammar-position.list-options/*
        eval-x:x:/+/*/parent
        magic-menu.options._create-options
          parent:x:/@p5.web.widgets.find/*/*?value
          options

        /*
         * Returning success to caller.
         */
        return:bool:true


    widgets
      div
        class:strip fill magic-menu-options-pager-toolbar
        widgets

          /*
           * Filter/search textbox.
           */
          input:magic-menu-options-search-textbox
            type:text
            title:Search for commands, keyboard shortcut S
            placeholder:Search ...
            class:smaller
            accesskey:S
            oninit

              /*
               * Clears the current filter.
               */
              p5.web.viewstate.set:magic-menu.options-filter

            events


              /*
               * Returns the current filter to caller.
               */
              magic-menu.options.get-filter

                /*
                 * Returning current filter to caller, if any.
                 */
                p5.web.viewstate.get:magic-menu.options-filter
                return:x:/@p5.web.viewstate.get/*?value


              /*
               * Sets the current filter to given [_arg], if any.
               */
              magic-menu.options.set-filter

                /*
                 * Retrieving filter, to see if anything was actually changed, to
                 * shave off a couple of CPU cycles in case filter wasn't changed.
                 */
                magic-menu.options.get-filter
                if:x:/@magic-menu.options.get-filter?value
                  =:x:/../*/_arg?value

                  /*
                   * No reasons to proceed.
                   */
                  return

                /*
                 * Checking if caller supplied a filter at all, and if not, simply
                 * removing any existing filters.
                 */
                if:x:/../*/_arg?value

                  /*
                   * Updating filter.
                   */
                  p5.web.viewstate.set:magic-menu.options-filter
                    src:x:/../*/_arg?value

                else

                  /*
                   * Clearing filter.
                   */
                  p5.web.viewstate.set:magic-menu.options-filter

                /*
                 * Changing textbox' value to whatever was given, if anything.
                 */
                set-widget-property:x:/../*/_event?value
                  value:x:/../*/_arg?value

                /*
                 * Re-databinding our options widget, since filter has been updated.
                 */
                magic-menu.options.show


              /*
               * Returns the current "offset" to caller, if any.
               */
              magic-menu.options.get-offset

                /*
                 * Returning offset, as set in ViewState.
                 */
                p5.web.viewstate.get:magic-menu.options.offset
                if:x:/@p5.web.viewstate.get/*?value
                  not

                  /*
                   * No current offset, returning integer "0" to caller.
                   */
                  return:int:0

                return:x:/@p5.web.viewstate.get/*?value


              /*
               * Sets the current "offset".
               */
              magic-menu.options.set-offset

                /*
                 * Sets offset in ViewState.
                 */
                p5.web.viewstate.set:magic-menu.options.offset
                  src:x:/../*/_arg?value.long


            onkeydown:@"if (event.keyCode == 13) {p5.$('magic-menu-options-search-textbox').raise('.onsearch');return false;}"
            .onsearch

              /*
               * Making sure we store current filter, and invoke event responsible
               * for actually handling filtering.
               */
              get-widget-property:magic-menu-options-search-textbox
                value
              magic-menu.options.set-filter:x:/@get-widget-property/*/*?value

              /*
               * Making sure we set focus to "filter" textbox, to make it easier
               * to perform consecutive filterings/searches.
               */
              micro.page.set-focus:x:/../*/_event?value

          button:magic-menu-options-go-back
            innerValue:@"<span class=""icon-reply""></span>"
            title:Go back to previous level, keyboard shortcut P
            accesskey:P
            disabled
            events


              /*
               * Handled to make sure we hide/show "go back" button.
               */
              magic-menu.position.changed

                /*
                 * Checking if we have a current "grammar-position", and if not,
                 * we hide widget entirely.
                 */
                magic-menu.grammar-position.get
                if:x:/@magic-menu.grammar-position.get?value

                  /*
                   * We have a current "grammar-position", making sure we display
                   * "back button".
                   */
                  delete-widget-property:x:/../*/_event?value
                    disabled

                else

                  /*
                   * No current "grammar-position", hiding "back button".
                   */
                  set-widget-property:x:/../*/_event?value
                    disabled


            onclick

              /*
               * Popping off option, making sure we delete our filter in the process.
               *
               * Notice, this will indirectly refresh our options, so there's
               * no point in doing anything else here.
               */
              magic-menu.options.set-filter
              magic-menu.grammar-position.pop

          button:magic-menu-options-search-clear
            innerValue:@"<span class=""icon-cross""></span>"
            disabled
            events


              /*
               * Handled to make sure we show/hide "clear filter" button.
               */
              magic-menu.options.set-filter

                /*
                 * If we have no filter, we hide the button, otherwise we show it.
                 */
                if:x:/../*/_arg?value
                  and:x:/../*/_arg?value
                    !=:

                  /*
                   * Showing button.
                   */
                  delete-widget-property:x:/../*/_event?value
                    disabled

                else

                  /* 
                   * Hiding button.
                   */
                  set-widget-property:x:/../*/_event?value
                    disabled


            onclick

              /*
               * Removes current filter, and sets focus to "filter" textbox.
               */
              magic-menu.options.set-filter
              micro.page.set-focus:magic-menu-options-search-textbox

          button:magic-menu-options-page-previous
            innerValue:@"<span class=""icon-arrow-left""></span>"
            disabled
            onclick

              /*
               * Paging to previous options.
               */
              magic-menu.options.show-previous

          button:magic-menu-options-page-next
            innerValue:@"<span class=""icon-arrow-right""></span>"
            disabled
            onclick

              /*
               * Paging to next options.
               */
              magic-menu.options.show-next

      container:magic-menu-help-list-custom
        element:ul
        class:magic-menu-custom-options
        events


          /*
           * Helper active event to clear custom options
           */
          magic-menu.options.clear-custom

            /*
             * Clearing custom options.
             */
            clear-widget:x:/../*/_event?value


      container
        element:ul
        class:magic-menu-options
